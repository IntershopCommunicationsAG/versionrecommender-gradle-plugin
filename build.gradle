plugins {
    // project plugins
    id 'java-gradle-plugin'
    id 'groovy'
    // test coverage
    id 'jacoco'

    // ide plugin
    id 'idea'

    // publish plugin
    id 'maven-publish'

    // intershop version plugin
    id 'com.intershop.gradle.scmversion' version '3.6.0'

    // plugin for documentation
    id 'org.asciidoctor.convert' version '1.5.8.1'

    // plugin for publishing to Gradle Portal
    id 'com.gradle.plugin-publish' version '0.9.10'

    // plugin for publishing to jcenter
    id 'com.jfrog.bintray' version '1.8.4'
}

scm {
    version {
        initialVersion = '1.0.0'
    }
}

group 'com.intershop.gradle.versionrecommender'
description 'Gradle Version Recommendation Plugin'
version = scm.version.version

gradlePlugin {
    plugins {
        versionrecommenderPlugin {
            id = 'com.intershop.gradle.versionrecommender'
            implementationClass = 'com.intershop.gradle.versionrecommender.VersionRecommenderPlugin'
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// set correct project status
if (project.version.endsWith('-SNAPSHOT')) {
    status = 'snapshot'
}

test {
    systemProperty 'intershop.host.ivy.url',       'https://repository.intershop.de:443/ivy-releases/'
    systemProperty 'intershop.host.mvn.url',       'https://repository.intershop.de:443/mvn-releases/'
    systemProperty 'intershop.host.username',      System.getenv('ISHUSERNAME') ?: System.getProperty('ISHUSERNAME')
    systemProperty 'intershop.host.userpassword',  System.getenv('ISHKEY') ?: System.getProperty('ISHKEY')

    systemProperty 'giturl',        System.getenv('GITURL') ?: System.getProperty('GITURL')
    systemProperty 'gituser',       System.getenv('GITUSER') ?: System.getProperty('GITUSER')
    systemProperty 'gitpasswd',     System.getenv('GITPASSWD') ?: System.getProperty('GITPASSWD')

    systemProperty 'svnurl',        System.getenv('SVNURL') ?: System.getProperty('SVNURL')
    systemProperty 'svnuser',       System.getenv('SVNUSER') ?: System.getProperty('SVNUSER')
    systemProperty 'svnpasswd',     System.getenv('SVNPASSWD') ?: System.getProperty('SVNPASSWD')

    // set heap size for the test JVM(s)
    minHeapSize = "64m"
    maxHeapSize = "128m"

    // set JVM arguments for the test JVM(s)
    jvmArgs '-XX:MaxPermSize=96m'

    // Gradle versions for test
    systemProperty 'intershop.gradle.versions', '4.4,4.9'
}

task copyAsciiDoc {
    def outputDir = file("$buildDir/tmp/asciidoctorSrc")
    def inputFiles = fileTree(dir: rootDir, include: '**/*.asciidoc')

    inputs.files inputFiles
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()

        copy {
            from inputFiles
            into outputDir
        }
    }
}

asciidoctorj {
    noDefaultRepositories = true
}

asciidoctor {
    sourceDir "${buildDir}/tmp/asciidoctorSrc"
    sources {
        include 'README.asciidoc'
    }

    backends 'html5', 'docbook'
    options doctype : 'article',
            ruby    : 'erubis'
    attributes  'latestRevision'     : project.version,
            'toc':'left',
            'toclevels':'2',
            'source-highlighter' : 'coderay',
            'icons': 'font',
            'setanchors':'true',
            'idprefix':'asciidoc_',
            'idseparator':'-',
            'docinfo1':'true'
}

asciidoctor.dependsOn copyAsciiDoc

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true

        html.setDestination(new File(project.buildDir, 'jacocoHtml'))
    }
}

task groovydocJar(type: Jar) {
    dependsOn groovydoc
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

// additional sources artifact
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        intershopMvn(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier 'sources'
            }

            artifact groovydocJar {
                classifier "javadoc"
            }

            artifact(new File(buildDir, 'asciidoc/html5/README.html')) {
                classifier 'reference'
            }

            artifact(new File(buildDir, 'asciidoc/docbook/README.xml')) {
                classifier = 'docbook'
            }

            pom.withXml {
                def Node root = asNode()
                root.appendNode('name', project.name)
                root.appendNode('description', project.description)
                root.appendNode('url', "https:/gitlab.intershop.de/IntershopGradlePlugins/${project.name}")

                def scm = root.appendNode('scm')
                scm.appendNode('url', "https://gitlab.intershop.de/IntershopGradlePlugins/${project.name}")
                scm.appendNode('connection', "scm:git:https://gitlab.intershop.de/IntershopGradlePlugins/${project.name}.git")

                def org = root.appendNode('organization')
                org.appendNode('name', 'Intershop Communications')
                org.appendNode('url', 'http://intershop.com')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'Apache License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0')
                license.appendNode('distribution', 'repo')
            }
        }
    }
    repositories {
        maven {
            url '/Users/mraab/.gradle/.localRepo'
        }
    }
}

publish.dependsOn asciidoctor

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = 'intershopcommunicationsag'

        licenses = ['Apache-2.0']
        vcsUrl = "https://github.com/IntershopCommunicationsAG/${project.name}"

        desc = project.description
        websiteUrl = "https://github.com/IntershopCommunicationsAG/${project.name}"
        issueTrackerUrl = "https://github.com/IntershopCommunicationsAG/${project.name}/issues"

        labels = ['intershop', 'gradle', 'plugin', 'version', 'dependencies', 'versionrecommendation']
        publicDownloadNumbers = true

        version {
            name = project.version
            desc = "${project.description} ${project.version}"
            released  = new Date()
            vcsTag = project.version
        }

        publications = ['intershopMvn']
    }
}

bintrayUpload.dependsOn asciidoctor

pluginBundle {
    website = "https://github.com/IntershopCommunicationsAG/${project.name}"
    vcsUrl = "https://github.com/IntershopCommunicationsAG/${project.name}"
    description = project.description
    tags = ['intershop', 'gradle', 'plugin', 'version', 'dependencies', 'versionrecommendation']

    plugins {
        versionrecommenderPlugin {
            id = gradlePlugin.plugins.versionrecommenderPlugin.id
            displayName = project.description
        }
    }
}

dependencies {
    compile 'org.apache.maven:maven-model-builder:3.3.9'
    compile 'commons-codec:commons-codec:1.6'
    compile 'org.apache.httpcomponents:httpclient:4.5.5'
    compile 'org.slf4j:slf4j-api:1.7.16'
    compile 'com.intershop.gradle.version:extended-version:2.0.1'
    compile 'net.sourceforge.nekohtml:nekohtml:1.9.22'
    compile 'com.trilead:trilead-ssh2:1.0.0-build221'
    runtime 'net.java.dev.jna:jna:4.1.0'
    compile 'com.netflix.nebula:nebula-gradle-interop:0.5.0'

    //svn
    // replace svnkit's JNA 4.x with 3.2.7, which is used by Gradle itself
    compile('org.tmatesoft.svnkit:svnkit:1.9.3') {
        exclude group: 'net.java.dev.jna'
        exclude group: 'com.trilead', module: 'trilead-ssh2'
    }

    //jgit
    compile('org.eclipse.jgit:org.eclipse.jgit:5.0.1.201806211838-r') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    testCompile 'com.intershop.gradle.test:test-gradle-plugin:3.2.0'
    testCompile gradleTestKit()

    testCompile 'commons-io:commons-io:2.2'
}

repositories {
    jcenter()
}

